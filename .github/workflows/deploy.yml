name: Deploy To GCE

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: GitHub repo 불러오기
        uses: actions/checkout@v4

      - name: JDK 21 버전 설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 21

      - name: application.yml 생성
        run: echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./src/main/resources/application.yml

      - name: 실행 권한 부여
        run: chmod +x ./gradlew

      - name: 테스트 및 빌드
        run: ./gradlew clean build

      - name: Google Cloud SDK 설정
        uses: "google-github-actions/auth@v2"
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Docker를 위한 gcloud 인증 설정
        run: gcloud auth configure-docker asia-northeast3-docker.pkg.dev

      - name: Docker 이미지 생성 및 태그 설정
        run: docker build -t asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-image/gcptest:latest .

      - name: Docker 이미지 푸시
        run: docker push asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-image/gcptest:latest

      - name: `compose.yml` GCE 서버로 복사
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.GCE_HOST }}
          username: ${{ secrets.GCE_USERNAME }}
          key: ${{ secrets.GCE_PRIVATE_KEY }}
          source: "compose.yml"
          target: "/home/${{ secrets.GCE_USERNAME }}/"

      - name: SSH로 GCE에 접속하여 배포
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.GCE_HOST }}
          username: ${{ secrets.GCE_USERNAME }}
          key: ${{ secrets.GCE_PRIVATE_KEY }}
          script_stop: true
          script: |
            cd /home/${{ secrets.GCE_USERNAME }}/  
            sudo docker compose down || true
            sudo docker pull asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-image/gcptest:latest
            sudo docker compose up -d --build
#            sudo docker stop gcptest || true
#            sudo docker rm gcptest || true
#            sudo docker pull asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-image/gcptest:latest
#            sudo docker run -d --name gcptest -p 8080:8080 --restart always asia-northeast3-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/docker-image/gcptest:latest